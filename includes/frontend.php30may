<?php
// Function TO Input Data
function input_data(){
	global $wpdb;
	$current_user = wp_get_current_user();
	$role = $current_user->roles[0];
	$id=$current_user->ID;
	if ( !is_user_logged_in() ) {
		echo "<h1>You Are Not Logged In</h1>";
		echo "<a href='".get_site_url()."/login'"."> Go Back To Login Page</a>";
	}
	else{
	$crops = get_terms( 'crop', array(
									'orderby'    => 'name',
									'hide_empty' => 0,
								) );
	$ingredient = array(
		'post_type' => 'ingredient',
		'post_status' => 'publish',
		'posts_per_page' => -1
	); 
	$countries = get_terms( 'country', array(
									'orderby'    => 'name',
									'hide_empty' => 0,
								) );
	$manufacturers = get_terms( 'manufacturer', array(
		'orderby'    => 'name',
		'hide_empty' => 0,
	) );
	$activities = get_terms( 'activity', array(
		'orderby'    => 'name',
		'hide_empty' => 0,
	) );                 
	$the_query = new WP_Query( $ingredient ); ?>
	<script>
	jQuery( document ).ready(function( $ ) {
		$('.add-ingredient').click(function(){
			$('.dynamic-element').first().clone().appendTo('.dynamic-stuff').show();
			attach_delete();
			});
		$('.add-another-crop').click(function(){
			$('.input-crop-fields').first().clone().appendTo('.dynamic-crop').show();
			attach_delete();
			});



	//Attach functionality to delete buttons
		function attach_delete(){
			$('.delete').off();
			$('.delete').click(function(){
			console.log("click");
			$(this).closest('.form-group').remove();
			});
		}
	});
	</script>
 <!-- End of fields-->
    <form method="post" class="agr-style" action="../data-added">
    	<input type="text" class="form-control" name="input-product-name" placeholder="Enter Product name" required="">
	<div class="form-group dynamic-element" >
  <!-- Replace these fields -->
    <select id="input-ingredient" name="input-ingredient[]" class="form-control">
    	<option value = "0">Choose Active Ingredient</option>
    	<?php while ( $the_query->have_posts() ) : $the_query->the_post(); ?>
				<option value="<?php echo(get_the_ID()) ?>"><?php echo get_the_title() ?></option>
		<?php endwhile; ?>
     <?php ?>
    </select>
    <input type="text" class="agr-comp" name="input-composition[]" placeholder="Enter Composition" required="">
    <div class="col-md-1 dlt-btn">
      <p class="delete">x</p>
    </div>
  </div>
  <div class="dynamic-stuff">
  </div>
  <!-- Dynamic Add fields --> 
  <a class="add-ingredient">Add another active ingredient</a>
  <!-- End dynamic fields -->
  <p>if you cannot find an active ingredient in the list above, please contact support@agrinomia.com</p>

  <!-- Countries Drop Down -->
  <div class="agr-wth">
  	<div class="col-md-6 col-pd">
  <label>Please select the country</label>
  <select name="input-country">
  	<option>Choose Country</option>
  	<?php foreach ($countries as $key => $country): ?>
  		<option value="<?php echo ($country->term_id) ?>"><?php echo ($country->name); ?></option>
  	<?php endforeach; ?>
  </select>
	</div>
  <!-- Countries Drop down Ends here -->
  <!-- Manufacturer Drop Down -->
  <div class="col-md-6">
  <label>Please Select Manufacturer</label>
  <select name="input-manufacturer">
  	<option value="0">Choose Manufacturer</option>
	<?php foreach ($manufacturers as $key => $manufacturer): ?>
		<option value="<?php echo ($manufacturer->term_id) ?>"><?php echo ($manufacturer->name); ?></option>
  	<?php endforeach; ?>
	</select>
	</div>
	</div>
  <!-- Manufacturer Drop Down Ends Here -->
  <div class="input-crop-fields">
  <div class="agr-wth">
  	<!-- Crop Drop Down -->
  	<div class="col-md-6 col-pd">
  	<label>Please Select Crop</label>
  <select name="input-crops[]">
  	<option value="0">Choose Crop</option>
	<?php foreach ($crops as $key => $crop): ?>
		<option value="<?php echo ($crop->term_id) ?>"><?php echo ($crop->name); ?></option>
  	<?php endforeach; ?>
	</select>
	</div>
		<!-- Crop Drop Down Ends Here -->

  <!-- Activity Drop Down Starts Here -->
  <div class="col-md-6">
  <label>Please Select Activity</label>
  <select name="input-activity[]">
  	<option value="0">Choose Activity</option>
	<?php foreach ($activities as $key => $activity): ?>
		<option value="<?php echo ($activity->term_id) ?>"><?php echo ($activity->name); ?></option>
  	<?php endforeach; ?>
	</select>
	</div>
	</div>
  <!-- Activity Drop Down Ends Here -->
  <input type="text" name="input-dosage[]" placeholder="Enter Dosage" required="">
  <input type="text" name="input-method-app[]" placeholder="Enter Method Of Application" required="">
  <input type="text" name="input-quarantine[]" placeholder="Enter Quarantine" required="">
</div>
<br>
<div class="dynamic-crop">
</div>
<!-- Button to Add Crop Fields -->
  <a class="add-another-crop">Add Another Crop</a>
  <!-- Button to Add Crop Fields Ends Here -->

	<button type="submit" class="agr-btn" name="singlebutton">Submit For Approval</button>
</form>	
	<?php
	}
}
add_shortcode('input-data-table','input_data');
// Function TO Input Data Ends Here

// Function To Add the Data in Data Base
function datatable_add(){
	global $wpdb;
	$current_user = wp_get_current_user();
	$product_name=$_POST['input-product-name'];
	$ingredient_ids= $_POST['input-ingredient'];
	$compostions=$_POST['input-composition'];
    $crops = $_POST['input-crops'];
	$countries = $_POST['input-country'];
	$manufacturers = $_POST['input-manufacturer'];
	$activities = $_POST['input-activity'];
	$dosages = $_POST['input-dosage'];
	$method_apps = $_POST['input-method-app'];
	$quarantines = $_POST['input-quarantine'];
	if($product_name!=''){
		if($current_user->ID!=0){
			$product_post = array(
					'post_title'    => $product_name,
					'post_type'     => 'product',
					'post_status'   => 'draft',
					'post_author'   => $current_user->ID,
					'post_category' => array( 8,39 )
				);
			$product_id = wp_insert_post( $product_post);
			wp_set_post_terms( $product_id, $countries, 'country', true );
			wp_set_post_terms( $product_id, $manufacturers, 'manufacturer', true );
			
			foreach ($ingredient_ids as $key => $ingredient_id) {
				if($ingredient_id != 0&& $compostions[$key] !=''){
					$wpdb->insert(
								$wpdb->prefix . 'product_ingredient',
								array(
									'product_id'        => $product_id,
									'ingredient_id'     => $ingredient_id,
									'content'           => $compostions[$key],
									'user_id'           => $current_user->ID,
									'status'            => 0,
									),
								array(
									'%d', '%d', '%s', '%d', '%d',
									)
								);

				}
			}
			foreach ($crops as $key => $crop) {
				$wpdb->insert(
								$wpdb->prefix . 'crop_data',
								array(
									'product_id'        => $product_id,
									'crop_id'			=> $crop,
									'activity_id'     	=> $activities[$key],
									'dosage'           	=> $dosages[$key],
									'method_app'		=> $method_apps[$key],
									'quarantine' 		=> $quarantines[$key],
									'user_id'           => $current_user->ID,
									'status'            => 0,
									),
								array(
									'%d', '%d', '%d', '%s', '%s', '%s','%d', '%d',
									)
								);	
			}
			echo "<h1>The Data Is Inserted And Waiting For Approval</h1>";
		}
	else{
		echo "<h1>You Are Not Logged In Please Login To Enter The Data</h1>";
		}
	}
}
add_shortcode('data-added','datatable_add');
// Function To Add the Data in Database Ends Here
/*Function to Show the DataTable*/
add_shortcode('product_data_tables','show_data');
function show_data(){
	global $wpdb;
	$args = array(
				'post_type' => 'product',
				'post_status' => 'publish',
				'posts_per_page' => -1
				);              
	$the_query = new WP_Query( $args); ?>
	<!-- JQuery to Sort the Columns of the Table -->
	<script>
	jQuery( document ).ready(function( $ ) {
		$('.js-example-basic-single').select2();
		var thIndex = 0,
    	curThIndex = null;
		$(function(){
		  $('table thead tr th').click(function(){
		    thIndex = $(this).index();
		    if(thIndex != curThIndex){
		      curThIndex = thIndex;
		      sorting = [];
		      tbodyHtml = null;
		      $('table tbody tr').each(function(){
		        sorting.push($(this).children('td').eq(curThIndex).html() + ', ' + $(this).index());
		      });
		      
		      sorting = sorting.sort();
		      sortIt();
		    }
		  });
		})

		function sortIt(){
		  for(var sortingIndex = 0; sortingIndex < sorting.length; sortingIndex++){
		  	rowId = parseInt(sorting[sortingIndex].split(', ')[1]);
		  	tbodyHtml = tbodyHtml + $('table tbody tr').eq(rowId)[0].outerHTML;
		  }
		  $('table tbody').html(tbodyHtml);
		}
		$( ".category" ).change(function() {
			$(".activity").attr('disabled','disabled');
		  var ajaxurl = '/wp-admin/admin-ajax.php';
		  var category = $('.category').val();
		  $.ajax({
					url: ajaxurl,
					type: 'post',
					data: {
						action   :'get_activities',
						category : category,
					},
					success: function (response) {
						var elem =$('.activity') ;
						elem.empty();
						var obj = jQuery.parseJSON(response);
						var list = '';
						$.each( obj, function( key, value ) {
							$(".activity").removeAttr('disabled');
								if(value!=null){
							  list+='<option value="' + key +'">' + value + '</option>';
							}
							});
						elem.html(list);
						console.log(obj);
						
					}
				});
		});
	});
	</script>
	<!-- JQuery to Sort the Columns of the Table Ends Here -->
	<!-- JavaScript to Search The Table With Input Field -->
	<script type="text/javascript">
	(function(document) {
		'use strict';

		var LightTableFilter = (function(Arr) {

			var _input;
	    var _select;

			function _onInputEvent(e) {
				_input = e.target;
				var tables = document.getElementsByClassName(_input.getAttribute('data-table'));
				Arr.forEach.call(tables, function(table) {
					Arr.forEach.call(table.tBodies, function(tbody) {
						Arr.forEach.call(tbody.rows, _filter);
					});
				});
			}
	    
			function _onSelectEvent(e) {
				_select = e.target;
				var tables = document.getElementsByClassName(_select.getAttribute('data-table'));
				Arr.forEach.call(tables, function(table) {
					Arr.forEach.call(table.tBodies, function(tbody) {
						Arr.forEach.call(tbody.rows, _filterSelect);
					});
				});
			}

			function _filter(row) {
	      
				var text = row.textContent.toLowerCase(), val = _input.value.toLowerCase();
				row.style.display = text.indexOf(val) === -1 ? 'none' : 'table-row';

			}
	    
			function _filterSelect(row) {
	     
				var text_select = row.textContent.toLowerCase(), val_select = _select.options[_select.selectedIndex].value.toLowerCase();
				row.style.display = text_select.indexOf(val_select) === -1 ? 'none' : 'table-row';

			}

			return {
				init: function() {
					var inputs = document.getElementsByClassName('light-table-filter');
					var selects = document.getElementsByClassName('select-table-filter');
					Arr.forEach.call(inputs, function(input) {
						input.oninput = _onInputEvent;
					});
					Arr.forEach.call(selects, function(select) {
	         			select.onchange  = _onSelectEvent;
					});
				}
			};
		})(Array.prototype);

		document.addEventListener('readystatechange', function() {
			if (document.readyState === 'complete') {
				LightTableFilter.init();
			}
		});

	})(document);
	</script>
	<script>
		jQuery( document ).ready(function( $ ) {
			$(".js-example-data-ajax").select2({
		  ajax: {
		    url: "/wp-admin/admin-ajax.php",
		    dataType: 'json',
		    delay: 250,
		    data: function (params) {
		      return {
		      	action : 'get_product_names',
		        q: params.term // search term
		      };
		    },
		    processResults: function (data, params) {
		      // parse the results into the format expected by Select2
		      // since we are using custom formatting functions we do not need to
		      // alter the remote JSON data, except to indicate that infinite
		      // scrolling can be used
		      params.page = params.page || 1;

		      return {
		        results: data
		      };
		    },
		    cache: true
		  },
		  placeholder: 'Search for a repository',
		  escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
		  minimumInputLength: 1,
		  templateResult: formatRepo,
		  templateSelection: formatRepoSelection
		});

		function formatRepo (repo) {
		  /*if (repo.loading) {
		    return repo.full_name;
		  }*/

		  var markup = "<div class='select2-result-repository clearfix'>" +
		    "<div class='select2-result-repository__meta'>" +
		      "<div class='select2-result-repository__title'>" + repo.text + "</div>";


		  markup += "<div class='select2-result-repository__statistics'>" +
		  "</div>" +
		  "</div></div>";

		  return markup;
		}

		function formatRepoSelection (repo) {
		  return repo.text;
		}
	});
	</script>
	<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/css/select2.min.css" rel="stylesheet" />
	<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/js/select2.min.js"></script>
	<!-- JavaScript to Search The Table With Input Field Ends Here-->

	<!-- Fields On The Front Ends To Filter The Table -->
	<div class="agr-style">
		<a class="add-ingredient" href="./input-data">Add Product Data</a><br>
	<!-- Displaying the Countries Checkbox -->
	<form method="get">
	<label>Select Countries</label>
	<select multiple style="height: 100px;" class="countries" name="countries">
		<option value="">All Countries</option>
	<?php $countries = get_terms( 'country', array(
    							  'hide_empty' => false,
								) ); 
		foreach ($countries as $key => $country) { ?>
			<option <?php echo ($_GET['countries']==$country->term_id?"selected=selected":null); ?> value="<?php echo($country->term_id); ?>"><?php echo($country->name); ?></option><br>
		<?php } ?>
		</select>
		<!-- Countries Ends Here -->
		<!-- Category starts here -->
		<?php $posts_array = get_posts(array(
								        'posts_per_page' => -1,
								        'post_type' => 'ingredient',
								        'tax_query' => array(
								            array(
								                'taxonomy' => 'ingredient_category',
								                'field' => 'term_id',
								                'terms' => 10,
								            )
								        )
								    )
						); 
		$activities = array();
		foreach ($posts_array as $key => $post) {
			$products_ids[] = $wpdb->get_results("SELECT product_id FROM {$wpdb->prefix}product_ingredient WHERE ingredient_id = $post->ID "); 
		} 
		foreach ($products_ids as $key => $product_ids) {
		   	foreach ($product_ids as $key => $products) {
		   		$result = $wpdb->get_results("SELECT activity_id FROM {$wpdb->prefix}crop_data WHERE product_id = $products->product_id");
		   		foreach ($result as $key => $value) {
		   		array_push($activities, $value->activity_id);
		   		}
		   	}
		   }
		   $unique_activities=array_unique($activities);
		  ?>
		<div class="row-man">
		  <div class="col-mdd-4">
		<label>Select Category</label>
		<select class="category" name="category" class="category" >
			<option value="">All Categories</option>
		<?php $categories = get_terms('ingredient_category',array(
										'hide_empty' => false,
										) );
			if(isset($_GET['category'])){

			}
		foreach ($categories as $key => $category) { ?>
			<option <?php echo ($_GET['category']==$category->name?"selected=selected":null); ?> value="<?php echo($category->name); ?>"><?php echo ($category->name); ?></option>
		<?php } ?>
		</select>
		</div>
		<!-- Category Ends here -->
		<!-- Displaying the Manufacturer --> 
		<div class="col-mdd-4">	
		<label>Select Manufacturer</label>
		<select name= "manufacturer" class="manufacturer">
			<option value="">All Manufacturers</option>
		<?php $manufacturers = get_terms('manufacturer',array(
										'hide_empty' => false,
										) );
		foreach ($manufacturers as $key => $manufacturer) { ?>
			<option <?php echo ($_GET['manufacturer']==$manufacturer->name?"selected=selected":null); ?> value="<?php echo($manufacturer->name); ?>"><?php echo ($manufacturer->name); ?></option>
		<?php } ?>
		</select>
		</div>
		<!-- Manufacturer ends here -->
		<!-- Displaying the crops Here -->
		<div class="col-mdd-4">
		<label>Select Crop</label>
		<select name="crop" class="crops" >
			<option value="">All Crops</option>
		<?php $crops = get_terms('crop',array(
										'hide_empty' => false,
										) );
		foreach ($crops as $key => $crop) { ?>
			<option <?php echo ($_GET['crop']==$crop->term_id?"selected=selected":null); ?> value="<?php echo($crop->term_id); ?>"><?php echo ($crop->name); ?></option>
		<?php } ?>
		</select>
		</div>
		<!-- Crops Ends Here -->
		<div class="col-mdd-4">
			<!-- Displaying the activities Here -->
		<label>Select Activity</label>
		<select type="search" class="activity" name="activity">
			<option value="">All Activities</option>
		<?php $activities = get_terms('activity',array(
										'hide_empty' => false,
										) );
		foreach ($activities as $key => $activity) { ?>
			<option <?php echo ($_GET['activity']==$activity->term_id?"selected=selected":null); ?> value="<?php echo($activity->term_id); ?>"><?php echo ($activity->name); ?></option>
		<?php } ?>
		</select>
		<!-- Activities Ends Here -->
		
		</div>
	</div>
	<input type="submit" name="search-table" value="Search Data">
</form>

<!-- Fields On The Front Ends To Filter The Table Ends Here -->

<!-- Php get method to search The Table -->
<?php
if(isset($_GET['search-table'])){
	//Get The Data From Form
	$category_id = $_GET['category'];
	$manufacturer_id = $_GET['manufacturer'];
	$countries_id = $_GET['countries'];
	$crop_id = $_GET['crop'];
	$activity_id = $_GET['activity'];
	$where_query = array();
	if ($manufacturer_id!='') {
	  $where_query[] = "term_tax.taxonomy='manufacturer'";
	  $where_query[] = "terms.name IN ('".$manufacturer_id."')" ;
	}
	if ($countries_id!='') {
	  $where_query[] = "term_tax.taxonomy='country'";
	  $where_query[] = "terms.term_id IN (".$countries_id.")" ;
	}
	if ($crop_id!='') {
	  $where_query[] = "crops.crop_id=" . $crop_id ;
	}
	if ($activity_id!='') {
	  $where_query[] = "crops.activity_id=" . $activity_id ;
	}
	$where_query_text = " WHERE " . implode(' AND ', $where_query);
	$where_query_text.=" group by posts.ID";
	$result = $wpdb->get_results(" SELECT  posts.ID, crops.* ,prod_ing.* FROM wp_posts AS posts 
	 LEFT JOIN wp_crop_data AS crops ON posts.ID = crops.product_id
	 LEFT JOIN wp_product_ingredient AS prod_ing ON posts.ID = prod_ing.product_id
	 LEFT JOIN wp_term_relationships AS tax_r ON posts.ID = tax_r.object_id
	 LEFT JOIN wp_term_taxonomy AS term_tax ON tax_r.term_taxonomy_id = term_tax.term_taxonomy_id
	 LEFT JOIN wp_terms AS terms ON term_tax.term_id = terms.term_id 
	 $where_query_text"); 
?>
	<table>
			<thead>
				<th>Country</th>
				<th>Manufacturer</th>
				<th>Product</th>
				<th>Composition</th>
				<th>Dosage</th>
				<th>Crop</th>
				<th>Activity</th>
				<th>Method Of Application</th>
				<th>Restrictions</th>
			</thead>
	<?php foreach ($result as $key => $value) {
		//$get_data = $wpdb->get_results("SELECT * FROM {$wpdb->prefix}crop_data WHERE crop_id=");
		$country = wp_get_post_terms( $value->ID, 'country');
		$manufacturer = wp_get_post_terms( $value->ID, 'manufacturer'); 
		$activity = get_term_by('id', $value->activity_id, 'activity');
		$crop = get_term_by('id', $value->crop_id, 'crop');
		?>
			<tr>
				<td><?php echo $country[0]->name;?></td>
				<td><?php echo $manufacturer[0]->name;?></td>
				<td><?php echo get_the_title($value->ID); ?></td>
				<td><?php echo $value->content ?></td>
				<td><?php echo $value->dosage ?></td>
				<td><?php echo $crop->name;?></td>
				<td><?php echo $activity->name;?></td>
				<td><?php echo $value->method_app; ?></td>
				<td><?php echo $value->quarantine; ?></td>
			</tr>
	<?php }
	?>
	</table>

		<!-- This Is Displaying All The Data Of All The Products -->
<?php  }elseif (isset($_GET['select2_search'])) {
	$post_id = $_GET['select2_id'];
	$post_data = get_post($post_id);
	if ($post_data->post_type=="product") {
			$get_ingredients = $wpdb->get_results("SELECT * FROM {$wpdb->prefix}product_ingredient WHERE product_id = $post_data->ID");
			foreach ($get_ingredients as $key => $get_ingredient) {
				$ingredient_name.=$concat.get_the_title($get_ingredient->ingredient_id);
				$ingredient_content.=$concat.$get_ingredient->content;
				$category = wp_get_post_terms( $get_ingredient->ingredient_id, 'ingredient_category');
				$concat=',';
			}
			$get_crops = $wpdb->get_results("SELECT * FROM {$wpdb->prefix}crop_data
				WHERE product_id = $post_data->ID"); ?>
			<table>
				<thead>
					<th>Active ingredient</th>	
					<th>Country</th>
					<th>Manufacturer</th>
					<th>Product Name</th>
					<th>Composition</th>
					<th>Dosage</th>
					<th>Crop</th>
					<th>Activity</th>
					<th>Method of application</th>
					<th>Restrictions</th>
				</thead>
				
			<?php foreach ($get_crops as $key => $crop) {
			$manufacturer = wp_get_post_terms( $crop->product_id, 'manufacturer'); 
			$country = wp_get_post_terms( $crop->product_id, 'country');

			$crop_data=get_term_by('id', $crop->crop_id, 'crop'); 
			$activity_data=get_term_by('id', $crop->activity_id, 'activity'); ?>
				<tr>
					<td><?php echo($ingredient_name);  ?></td>
					<td><?php echo ($country[0]->name) ?></td>
					<td><?php echo ($manufacturer[0]->name) ?></td>
					<td><?php echo(get_the_title($crop->product_id)) ?></td>
					<td><?php echo ($ingredient_content) ?></td>
					<td><?php echo($crop->dosage)?></td>
					<td><?php echo($crop_data->name) ?></td>
					<td><?php echo($activity_data->name) ?></td>
					<td><?php echo($crop->method_app) ?></td>
					<td><?php echo($crop->quarantine) ?></td>	
				</tr>
			<?php } ?>
			</table>
		<?php }elseif ($post_data->post_type=="ingredient") {
			$get_product= $wpdb->get_results("SELECT * FROM {$wpdb->prefix}product_ingredient WHERE ingredient_id = $post_data->ID group by product_id");
			print_r($get_product);
			$product_id = $get_product[0]->product_id;
			$get_crops = $wpdb->get_results("SELECT * FROM {$wpdb->prefix}crop_data
				WHERE product_id = $product_id"); ?>
			<table>
				<thead>
					<th>Active ingredient</th>	
					<th>Product Name</th>
					<th>Composition</th>
					<th>Manufacturer</th>
					<th>Country</th>
					<th>Crop</th>
					<th>Dosage</th>
					<th>Activity</th>
					<th>Method of application</th>
					<th>Restrictions</th>
				</thead>
			<?php foreach ($get_crops as $key => $crop) {
				$manufacturer = wp_get_post_terms( $crop->product_id, 'manufacturer'); 
				$country = wp_get_post_terms( $id, 'country');
				$crop_data=get_term_by('id', $crop->crop_id, 'crop'); 
				$activity_data=get_term_by('id', $crop->activity_id, 'activity'); ?>
				<tr>
					<td><?php echo get_the_title($post_data->ID);  ?></td>
					<td><?php echo(get_the_title($crop->product_id)) ?></td>
					<td><?php echo ($$get_product[0]->content) ?></td>
					<td><?php echo ($manufacturer[0]->name) ?></td>
					<td><?php echo ($country[0]->name) ?></td>
					<td><?php echo($crop_data->name) ?></td>
					<td><?php echo($crop->dosage)?></td>
					<td><?php echo($activity_data->name) ?></td>
					<td><?php echo($crop->method_app) ?></td>
					<td><?php echo($crop->quarantine) ?></td>	
				</tr>
			<?php } ?>
			</table>	
		<?php }
}
 else { ?>
	<br>
	<form method="get">
	<select class="js-example-data-ajax form-control" name="select2_id">
  		<option value="3620194" selected="selected">select2/select2</option>
	</select>
	<input type="hidden" name="product_info" class="">
	<input type="submit" name="select2_search" value="Search Product Data">
	</form>
	<input type="search" class="light-table-filter" data-table="order-table" placeholder="Search In Table">
	<table class="wp-list-table widefat fixed striped data-table order-table table" width="100%">
			<thead style="cursor: pointer;">
				<th>Active ingredient</th>
				<th>Category</th>
				<th>Chemical group of active ingredient</th>	
				<th>Product Name</th>
				<th>Composition</th>
				<th>Manufacturer</th>
				<th>Country</th>
				<th>Crop</th>
				<th>Dosage</th>
				<th>Activity</th>
				<th>Method of application</th>
				<th>Restrictions</th>
			</thead>
		<tbody>
			<?php		
			while ( $the_query->have_posts() ) :
				$the_query->the_post(); 
				$id = get_the_ID();
				$country = wp_get_post_terms( $id, 'country');
				$manufacturer = wp_get_post_terms( $id, 'manufacturer');

				$get_crop = $wpdb->get_results( "SELECT * FROM {$wpdb->prefix}crop_data where product_id=$id AND status=1");
				$get_ingredients = $wpdb->get_results( "SELECT * FROM {$wpdb->prefix}product_ingredient where product_id=$id AND status=1");
				$ingredient_name='';
				$ingredient_content='';
				$concat='';
				foreach ($get_ingredients as $key => $get_ingredient) {
					$ingredient_name.=$concat.get_the_title($get_ingredient->ingredient_id);
					$ingredient_content.=$concat.$get_ingredient->content;
					$category = wp_get_post_terms( $get_ingredient->ingredient_id, 'ingredient_category');
					$concat=',';
				}
			foreach ($get_crop as $key => $crop):
				$crop_data=get_term_by('id', $crop->crop_id, 'crop'); 
				$activity_data=get_term_by('id', $crop->activity_id, 'activity');
				$ingredient_data='';
				$chemical_group = wp_get_post_terms( $crop->ingredient_id, 'chemical_group');
				?>
			<tr>
				<td><?php echo($ingredient_name);  ?></td>
				<td><?php echo($category[0]->name);  ?></td>
				<td><?php echo ($chemical_group[0]->name) ?></td>
				<td><?php echo(get_the_title($crop->product_id)) ?></td>
				<td><?php echo ($ingredient_content) ?></td>
				<td><?php echo ($manufacturer[0]->name) ?></td>
				<td><?php echo ($country[0]->name) ?></td>
				<td><?php echo($crop_data->name) ?></td>
				<td><?php echo($crop->dosage)?></td>
				<td><?php echo($activity_data->name) ?></td>
				<td><?php echo($crop->method_app) ?></td>
				<td><?php echo($crop->quarantine) ?></td>
			</tr>
			 <?php endforeach; ?>
			<?php endwhile; ?>
		</tbody>
    </table>
   </div>
    <!-- Table To Display Complete Data From All the Products End Here -->
<?php 
 }
}
//Ajax Call To Get Activities On The Base Of Selected Ingredient Category
add_action('wp_ajax_get_activities','get_activities');
function get_activities(){
	global $wpdb;
	$category = $_POST['category'];
	$posts_array = get_posts(array(
								        'posts_per_page' => -1,
								        'post_type' => 'ingredient',
								        'tax_query' => array(
								            array(
								                'taxonomy' => 'ingredient_category',
								                'field' => 'name',
								                'terms' => $category,
								            )
								        )
								    )
						);
	$activities = array();
		foreach ($posts_array as $key => $post) {
			$products_ids[] = $wpdb->get_results("SELECT product_id FROM {$wpdb->prefix}product_ingredient WHERE ingredient_id = $post->ID "); 
		} 
		foreach ($products_ids as $key => $product_ids) {
		   	foreach ($product_ids as $key => $products) {
		   		$result = $wpdb->get_results("SELECT activity_id FROM {$wpdb->prefix}crop_data WHERE product_id = $products->product_id");
		   		foreach ($result as $key => $value) {
		   		array_push($activities, $value->activity_id);
		   		}
		   	}
		}
	$unique_activities =array_unique($activities);
	foreach ($unique_activities as $key => $activity) {
		$term = get_term_by('id', $activity, 'activity');
		$activity_name[$activity]= $term->name;
	}
	echo (json_encode($activity_name));
	die();
}
//Ajax Call To Get Activities On The Base Of Selected Ingredient Category Ends Here
add_action('wp_ajax_get_product_names','get_product_names');
add_action('wp_ajax_nopriv_get_product_names','get_product_names');
function get_product_names(){
	global $wpdb;
	$value = $_GET['q'];
	$title = $value.'%';
	$abc = array("This","Is");
	$get_posts = $wpdb->get_results("SELECT ID as id , post_title as text FROM {$wpdb->prefix}posts WHERE post_type= 'product' OR post_type='ingredient' AND post_title LIKE '$title'");
	$myJSON = json_encode($get_posts);
	echo($myJSON);
	die();
}
?>